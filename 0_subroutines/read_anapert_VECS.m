function VECS=read_eigenvectors(PAR,Qprm,phonon_modes_filepath,varargin)
% VECS=read_eigenvectors(PAR,Qprm)
% 	Obtain eigenvectors for given Q-points by reading the "phonon_modes" file.
% 	This is generated by setting eig=yes flag in mode 55 of anapert
%
% 	File structure for "phonon_modes" is (repeated for each Q):
% 	Q-point
% 	Energy for first of the 3*N_atom phonons
% 	x_real x_imag		(atom 1)
% 	y_real y_imag		(atom 1)
% 	z_real z_imag		(atom 1)
% 	until 3*N_atom lines, then energy and mode array for successive phonons
%
% 	VECS output has:
% 	   Q_list (Nq x 3), Q_list read from 'phonon_modes' file.  Should match Qprm
% 	   energies: (N_modes x Nq)
% 	   vecs: (3dir*N_atom x Nq x N_modes).  Row has xyz for successive atoms.

[XTAL,EXP,INFO,PLOT,DATA,VECS]=params_fetch(PAR);

N_atom=XTAL.N_atom;
N_modes = 3*N_atom;

if 1
	if nargin<3
		phonon_modes_filepath='./phonon_modes';
		if nargin<2
			Qprm=calc_cnv_to_prm(XTAL, INFO.Q, EXP);
		else
			if isempty(Qprm);
				Qprm=calc_cnv_to_prm(XTAL, INFO.Q, EXP);
			end
		end
	end

	Nq = size(Qprm,1);

	% === sanity check: Nlines per Q should be 1+N_modes*(3*N_atom + 1) ===
	%	first line is Q, each Q has N_modes energies, after each Eng is displacement
	[bin, Nlines]=system(['wc ' phonon_modes_filepath]);
	Nlines=sscanf(Nlines,'%d',1);

	Nlines_expected= Nq * (1+N_modes*(3*N_atom+1));
	if Nlines~=Nlines_expected
		error(' Input file is wrong length!')
	end


else % === override mode for debugging ===
	disp(' NOTE: OVERRIDE MODE in "read_eigenvectors"');
	phonon_modes_filepath='./phonon_modes';
	[bin, Nlines]=system(['wc ' phonon_modes_filepath]);
	Nlines=sscanf(Nlines,'%d',1);

	Nq=Nlines/(1+N_modes*(3*N_atom+1))

	Nlines_expected= Nq * (1+N_modes*(3*N_atom+1));
	if Nlines~=Nlines_expected
		error(' wrong length!')
	end
end


%VECS is a structure which contains:
% title
% list of Q_points
% list of energies (N_modes x Nq)
% eigenvectors (3dir*N_atom x Nq x N_modes)

if ~isfield(VECS,'title')
		VECS.title='VECS';
end
VECS.Q_points=zeros(Nq,3);
VECS.energies=zeros(N_modes,Nq);
VECS.vecs=zeros(N_modes,Nq,3*N_atom);


%%	=== Read strufac file, put data into VECS ===
%% === throw error if file not found ===
if ~exist(phonon_modes_filepath,'file')
	error(' The "phonon_modes" file could not be found. Possibly an error with the anapert binary, or with finding "liblapack.so.3gf"');
else
	fid=fopen(phonon_modes_filepath, 'rt'); % open in read-text mode (windows compatible)
end

for ind_Q=1:Nq;
	mode_data=zeros(3*N_atom,2,N_modes);
	energy_data=zeros(N_modes,1);

	this_Q = fgetl(fid);
	if ~ischar(this_Q); 
		error([' Not a CHAR at ind_Q =' num2str(ind_Q)]); 
		break;
	end
	this_Q = sscanf(this_Q, '%f %f %f');	% convert to number
	VECS.Q_points(ind_Q,:) = this_Q(:)';

	for ind_mode=1:N_modes
		% first read energy of mode, put into array
		this_mode=fgetl(fid);
		if ~ischar(this_mode); 		% error handling
			error([' Not a CHAR at ind_mode=' ind_mode]);
			break;
		end
		this_mode=sscanf(this_mode, '%f');
		energy_data(ind_mode)=this_mode;


		% read actual movement data, 
		for ind_data=1:3*N_atom
			this_data=fgetl(fid);
			if ~ischar(this_data)
				error([' Not a CHAR at ind_data=' ind_data]);
				break;
			end
			this_data=sscanf(this_data, '%f %f');
			mode_data(ind_data,:,ind_mode)=this_data;
		end
	end

	VECS.energies(:,ind_Q)=energy_data;
	VECS.vecs(:,ind_Q,:)=mode_data(:,1,:) + i*mode_data(:,2,:);
end

%% === someday this will read the linewidths as well ===
VECS.phWidths=zeros(size(VECS.energies));

% === double-check ===
if VECS.Q_points ~= Qprm;
	if ~isclose(VECS.Q_points,Qprm, 10^-4);
		error([' Q-values from file don''t agree with input,\n' ...
				' Even after trying "isclose"'])
		VECS.Q_points
		Qprm
		diff=VECS.Q_points-Qprm
	end
end

% === clean-up ===
fclose(fid);

%% ## This file distributed with SNAXS beta 0.99, released 12-May-2015 ## %%
